version: '3.4'

# upload the configs
# label the worker nodes
# build kibana: localhost/kibana-logtrail:6.1.1

configs:
  elastconf:
    external: true
#  esrepo:
#    external: true
  fbyaml:
    external: true
  kbyaml:
    external: true
  logtrailconfig:
    external: true
  es-exporter-searches:
    external: true
  es-exporter-config:
    external: true
  es-exporter-script:
    external: true

networks:
  monitoring:
    external:
      name: monitoring
  lift-frontend:
    external:
      name: lift-frontend

volumes:
    esdata:
      name: esdata
    es-exporterdata:
      name: es-exporterdata

services:

  filebeater:
    image: docker.elastic.co/beats/filebeat:6.1.1
    deploy:
      mode: global
      labels:
        - "logspout.exclude=true"
    labels:
       org.label-schema.group: "monitoring"
       logspout.exclude: "true"
    configs:
      - source: fbyaml
        target: /etc/filebeat.yml
        mode: 0644
    command: -c /etc/filebeat.yml -e
    user: root
    volumes:
      - /var/log:/var/hostlog:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
     - monitoring
    depends_on:
     - elasticsearch


# no longer necessary with telegraf and kapacitor
#  metricbeater:
#    image: fedora:26
#    deploy:
#      mode: global
#    configs:
#      - source: esrepo
#        target: /etc/yum.repos.d/elastic.repo
#        mode: 0644
#      - source: mbyaml
#        target: /opt/metricbeat.yaml
#        mode: 0644
#      - source: mbsetup
#        target: /setup.sh
#        mode: 0755
#    entrypoint: /setup.sh
#    volumes:
#      - /proc:/hostfs/proc:ro
#      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#      - /:/hostfs:ro
#    networks:
#      - elk

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.1
    configs:
      - source: elastconf
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        mode: 0644
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms256m"
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
      logspout.exclude: "true"
    deploy:
      restart_policy:
        condition: on-failure
      labels:
        - "logspout.exclude=true"
      placement:
        constraints:
          - node.labels.elasticsearch == true

  es-exporter:
    image: localhost/es-exporter:1
    volumes:
      - es-exporterdata:/data
    configs:
      - source: es-exporter-searches
        target: /es-exporter/searches
        mode: 0644
      - source: es-exporter-config
        target: /es-exporter/config
        mode: 0644
      - source: es-exporter-script
        target: /es-exporter/run.sh
        mode: 0755
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
      logspout.exclude: "true"
    command: /es-exporter/run.sh
    depends_on:
      - elasticsearch
    deploy:
      labels:
        - "logspout.exclude=true"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.elasticsearch == true

  kibana:
#    image: docker.elastic.co/kibana/kibana-oss:6.1.1
    image: localhost/kibana-logtrail:6.1.1
    configs:
      - source: kbyaml
        target: /usr/share/kibana/config/kibana.yml
        mode: 0644
      - source: logtrailconfig
        target: /usr/share/kibana/plugins/logtrail/logtrail.json
        mode: 0644
    networks:
      - monitoring
      - lift-frontend
    depends_on:
      - elasticsearch
#    entrypoint: /setup.sh
    labels:
       org.label-schema.group: "monitoring"
       logspout.exclude: "true"
    deploy:
      labels:
         - "traefik.port=5601"
         - "traefik.docker.network=lift-frontend"
         - "traefik.backend=kibana"
         - "traefik.backend.loadbalancer.method=wrr"
         - "traefik.enable=true"
         - "traefik.frontend.entryPoints=management"
         - "traefik.frontend.rule=Host:kibana.test"
         - "logspout.exclude=true"
      replicas: 1
      placement:
        constraints:
          - node.labels.kibana == true

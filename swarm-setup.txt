
Install Ubuntu 16.04 without swap
Set private network-adapter (192.168.1.10 for master)
sudo apt-get install openssh-server git
sudo systemctl enable ssh
sudo systemctl disable ufw
sudo systemctl stop ufw

sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get -y update
sudo apt-get -y install docker-ce
sudo apt-get -y install git docker-compose curl

# Voor Centos:
sudo yum install -y yum-utils device-mapper-persistent-data lvm2
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum -y install docker-ce epel-release
sudo systemctl enable docker && sudo systemctl start docker
sudo yum install -y python-pip curl
sudo pip install docker-compose
disable selinux
sudo systemctl disable firewalld

ALL MACHINES:
sudo sysctl -w vm.max_map_count=262144
sudo sysctl -w net.bridge.bridge-nf-call-iptables=1
net.ipv4.ip_forward = 1

# In swarm we are allowed to use swap
# Add swap file
sudo dd if=/dev/zero of=/swapfile bs=1024 count=1500000
# set permissions
sudo chmod 600 /swapfile
# Make it swap
sudo mkswap /swapfile
# Enable
sudo swapon /swapfile
# And at boot
sudo bash -c "echo '/swapfile swap swap defaults 0 0' >> /etc/fstab"


# on all nodes:
sudo add-apt-repository ppa:gluster/glusterfs-3.12
sudo apt-get update
sudo apt-get install glusterfs-client
CENTOS:
yum -y install centos-release-gluster
yum -y install glusterfs
yum -y install glusterfs-fuse



# on manager:
sudo docker swarm init --advertise-addr 192.168.1.10
# on worker (example)
sudo docker swarm join --token SWMTKN-1-4u8fqrphixklissphjaz8rwtg76zhmoqlq7n1qfnd1cpx3ub7c-0i6y29ss4yr5bi72z14dk4a2j 192.168.1.10:2377

install consul
install nfs server en clients

on alle nodes:
sudo mkdir -p /nfsdata
chmod 755 /nfsdata

op manager:
yum -y install nfs-utils libnfsidmap
systemctl enable rpcbind
systemctl enable nfs-server
systemctl start rpcbind
systemctl start nfs-server
systemctl start rpc-statd
systemctl start nfs-idmapd
chown nfsnobody:nfsnobody /nfsdata

echo '/nfsdata           192.168.1.0/24(rw,sync,no_root_squash,no_subtree_check)' >> /etc/exports

op workers:
yum -y install nfs-utils


op manager:

exportfs -a

op workers:
echo '192.168.1.10:/nfsdata  /nfsdata   nfs      rw,sync,soft,intr  0     0' >> /etc/fstab
mount /nfsdata

on manager:
mkdir -p /nfsdata/influxdb/meta
mkdir -p /nfsdata/influxdb/data
mkdir -p /nfsdata/chronograf
mkdir -p /nfsdata/kapacitor
mkdir -p /nfsdata/elasticsearch/data
mkdir -p /nfsdata/portainer

# Deploy the gluster-compose (glusterfs server needs priviliged so cannot run in swarm-mode)
#sudo docker-compose -f gluster-compose.yml up -d

#on server:
# make subdirs:
#mkdir -p /data/brick1/gv0

#gluster volume create gv0 replica 2 server1:/data/brick1/gv0 server2:/data/brick1/gv0
#gluster volume create gv1 replica 2 server1:/data/brick1/gv1 server2:/data/brick1/gv1
#gluster volume create gv2 replica 2 server1:/data/brick1/gv2 server2:/data/brick1/gv2
#gluster volume create gv3 replica 2 server1:/data/brick1/gv3 server2:/data/brick1/gv3
#gluster volume create gv4 replica 2 server1:/data/brick1/gv4 server2:/data/brick1/gv4
#gluster volume create gv0 192.168.1.10:/data/brick1/gv0
#gluster volume start gv0


# on all nodes and manager:

mkdir -p /glustervols/gv0
mount -t glusterfs 192.168.1.10:/gv0 /glustervols/gv0
# build the glusterfs client from dockerfile on each machine
#sudo docker-compose -f glusterclient-compose up -d

install portainer MANUALY on manager:
docker run -d -p 9000:9000 --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /nfsdata/portainer:/data portainer/portainer

build the kibana image on every system
set the configs
- fbyaml -> configs.filebeat.yaml
- telegraf-config -> configs/telegraf-config
- kapacitor-config -> configs/kapacitor-config
- elastconf -> configs/elasticsearch.yml
deploy the stack
